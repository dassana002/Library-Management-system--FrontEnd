import { useState } from "react";
import { Button, Modal, FloatingLabel, Form } from "react-bootstrap";
import { Lendings } from "./LendingEdit";

interface Props {
    show: boolean;
    handleOnClose: () => void;
    update: (newLending: any) => Promise<void>;
    handleState: (newLending: any) => void;
}

export const LendingAdd = ({ show, handleOnClose, update, handleState }: Props) => {
    const [newLending, setNewLending] = useState<Lendings>({
        lendingId: "", // Assuming ID is auto-generated by backend
        bookId: "",
        memberId: "",
        isActive: true,
        overDue: 0,
        fineAmount: 0,
    });
    
    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const { name, type, value, checked } = e.target;
        setNewLending((prev) => ({
            ...prev,
            [name]: type === "checkbox" ? checked :
                (name === "overDue" || name === "fineAmount") ? (value ? Number(value) : 0) : value
        }));
    };

    const handleSubmit = async () => {
        if (!newLending.bookId || !newLending.memberId) {
            alert("Book ID and Member ID are required!");
            return;
        }
    
        const payload = {
            bookId: newLending.bookId,
            memberId: newLending.memberId,
            isActive: Boolean(newLending.isActive),
            overDue: Number(newLending.overDue),
            fineAmount: Number(newLending.fineAmount)
        };
        
        
    
        console.log("Submitting Lending Data:", JSON.stringify(payload, null, 2));
    
        try {
            await update(payload);
            handleState(payload);
            handleOnClose();
        } catch (err) {
            console.error("Error submitting lending data:", err);
            alert("Failed to add lending. Please try again.");
        }
    };
    

    return (
        <Modal show={show} onHide={handleOnClose} backdrop="static" centered>
            <Modal.Header closeButton>
                <Modal.Title>Add Lending</Modal.Title>
            </Modal.Header>
            <Modal.Body>
                <Form>
                    <FloatingLabel controlId="floatingBookId" label="Book ID" className="mb-3">
                        <Form.Control
                            type="text"
                            placeholder="Enter Book ID"
                            name="bookId"
                            value={newLending.bookId}
                            onChange={handleOnChange}
                        />
                    </FloatingLabel>
                    
                    <FloatingLabel controlId="floatingMemberId" label="Member ID" className="mb-3">
                        <Form.Control
                            type="text"
                            placeholder="Enter Member ID"
                            name="memberId"
                            value={newLending.memberId}
                            onChange={handleOnChange}
                        />
                    </FloatingLabel>
                    
                    <Form.Check
                        type="checkbox"
                        label="Is Active"
                        name="isActive"
                        checked={newLending.isActive}
                        onChange={handleOnChange}
                        className="mb-3"
                    />
                    
                    <FloatingLabel controlId="floatingOverDue" label="Over Due Days" className="mb-3">
                        <Form.Control
                            type="number"
                            placeholder="Enter Overdue Days"
                            name="overDue"
                            value={newLending.overDue}
                            onChange={handleOnChange}
                        />
                    </FloatingLabel>
                    
                    <FloatingLabel controlId="floatingFineAmount" label="Fine Amount" className="mb-3">
                        <Form.Control
                            type="number"
                            placeholder="Enter Fine Amount"
                            name="fineAmount"
                            value={newLending.fineAmount}
                            onChange={handleOnChange}
                        />
                    </FloatingLabel>
                </Form>
            </Modal.Body>
            <Modal.Footer>
                <Button variant="secondary" onClick={handleOnClose}>
                    Close
                </Button>
                <Button variant="success" onClick={handleSubmit}>
                    Submit
                </Button>
            </Modal.Footer>
        </Modal>
    );
};
